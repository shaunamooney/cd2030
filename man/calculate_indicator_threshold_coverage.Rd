% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_indicator_threshold_coverage.R
\name{calculate_indicator_threshold_coverage}
\alias{calculate_indicator_threshold_coverage}
\title{Calculate Threshold Coverage for Health Indicators}
\usage{
calculate_indicator_threshold_coverage(.data)
}
\arguments{
\item{.data}{A data frame or tibble containing health indicator coverage data with columns
named in the format \verb{cov_<indicator>_<source>}, where \verb{<indicator>} is one of
"zerodose", "undervax", "dropout_penta13", "dropout_measles12", "dropout_penta3mcv1",
or "dropout_penta1mcv1", and \verb{<source>} is one of "dhis2", "penta1", or "anc1".}
}
\value{
A tibble with the yearly average percentage of below-threshold coverage
for each indicator-source combination, where each value represents the percentage of
districts with below 10\% coverage for that indicator and source.
}
\description{
This function calculates the percentage of districts where coverage for specific health
indicators falls below a 10\% threshold, for each year. The function generates a binary
variable for each indicator, denoting whether it is below 10\%, and then calculates the
average percentage of below-threshold coverage for each indicator.
}
\details{
The function performs the following steps:
\enumerate{
\item \strong{Generate Binary Below-Threshold Variables}: For each indicator-source combination,
it generates a binary variable indicating if coverage is below 10\% (1 if below 10\% and
0 otherwise).
\item \strong{Rename Columns}: The generated columns are renamed by removing the \code{cov_} prefix.
\item \strong{Summarize}: The function then calculates the mean of each below-threshold indicator
across all districts, grouped by \code{year}, resulting in the percentage of districts
below 10\% for each indicator-source.
\item \strong{Round to Percentage}: The percentages are then multiplied by 100 and rounded to one decimal place.
Any missing values are set to 0\%.
}
}
\examples{
\dontrun{
  # Assuming `data` is a data frame with required columns:
  result <- calculate_indicator_threshold_coverage(data)
  result
}

}
