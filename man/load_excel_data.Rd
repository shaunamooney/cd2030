% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0_import_load_data.R
\name{load_excel_data}
\alias{load_excel_data}
\title{Load and Clean Countdown 2030 Excel Data}
\usage{
load_excel_data(
  path,
  start_year = NULL,
  admin_sheet_name = "Admin_data",
  population_sheet_name = "Population_data",
  reporting_sheet_name = "Reporting_completeness",
  service_sheet_names = c("Service_data_1", "Service_data_2", "Service_data_3")
)
}
\arguments{
\item{path}{A string. The path to the Excel file to be loaded.}

\item{start_year}{An integer. The minimum year to filter the data (default is
NULL).}

\item{admin_sheet_name}{A string. The name of the sheet containing administrative
data. Default is \code{"Admin_data"}.}

\item{population_sheet_name}{A string. The name of the sheet containing population
data. Default is \code{"Population_data"}.}

\item{reporting_sheet_name}{A string. The name of the sheet containing reporting
completeness data. Default is \code{"Reporting_completeness"}.}

\item{service_sheet_names}{A vector of strings. The names of the sheets containing
service data. Default is \code{c("Service_data_1", "Service_data_2", "Service_data_3")}.}
}
\value{
A tibble of class \code{cd_data}, containing cleaned and processed data.
}
\description{
\code{load_excel_data} reads specified sheets from an Excel file, cleans the data,
and outputs a tibble of class \code{cd_data}.
}
\details{
This function is designed to handle Countdown 2030 data sheets by ensuring each
sheet is properly loaded, standardized, and merged into a single tibble. It performs
checks for duplicates, cleans up formatting issues, and verifies the presence of
expected columns.
}
\examples{
\dontrun{
  # Load and clean data from a Countdown 2030 Excel file
  data <- load_excel_data("countdown2030_data.xlsx")
}

}
